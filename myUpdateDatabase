import os
import csv
import numpy as np
from datetime import datetime, timedelta
import pandas as pd
import time
import pytz
# TO DO: 
# make it work for files names and times
# get weather and moon to work 
# get weather and moon to update daily

class color:
   PURPLE = '\033[95m'
   CYAN = '\033[96m'
   DARKCYAN = '\033[36m'
   BLUE = '\033[94m'
   GREEN = '\033[92m'
   YELLOW = '\033[93m'
   RED = '\033[91m'
   BOLD = '\033[1m'
   UNDERLINE = '\033[4m'
   END = '\033[0m'

# checks user input of the data
def checkDatainput():
    while True: 
        date=input(color.RED + "Date (YYYYMMDD):" + color.END)

        try: 
            val=int(date)
            if len(date) == 8 and int(date) > 20231003:
                return date
                break
            else:
                print("Please enter a value date.") 
        except:
            print("Please enter a value date.") 

def loadDataFiles(d):
    folderPath = f"/storage/hive/project/phy-otte/shared/Trinity/Data/{d}/RawDataMerged/"
    dataList = os.listdir(folderPath)
    dataList = np.sort(np.array(dataList))
    if len(dataList) == 0:
        dataList = [f"{d}T00:00:00.00_FolderEmpty"]
    #print(dataList)
    return dataList


##-------------------------Get Definitions-------------------------##

def getRankingInfo():
    print(color.UNDERLINE + "\nRanking Table please provide: " + color.END)
    ranking=input(color.RED + "Ranking (see wiki):"+ color.END)
    rankingComment=input(color.BLUE + "\nComment: "+ color.END)
    return ranking, rankingComment

##-------------------------Write Definitions-------------------------##
    
def writeRankingSQL(d, fileList, ranking, rankingComment):
    output_sql = f'Output/Ranking_{d}.sql'  # Output SQL file

    with open(output_sql, mode='w') as sql_file:

        for f in fileList:
            # Generate the INSERT statement for each row
            sql = (
                f"INSERT INTO RankingInfo(Filename, ranking, comments) "
                f"VALUES ('{f}','{ranking}','{rankingComment}');\n"
            )
            # Write the generated SQL statement to the output file
            sql_file.write(sql)

    os.chmod(output_sql, 0o666)
    return print(f"Ranking SQL queries have been written to {output_sql}")


def main(): 
    ##------------------------- Start Code ------------------------------------------------------##
    ##-------------------------------------------------------------------------------------------##
    ##-------------------------------------------------------------------------------------------##
    ##------------------------- Load in File Information Table Creatation -----------------------##

    print("Welcome to the database upload. \nPlease provide the night uploading.")
    folderName = checkDatainput()
    #folderName = "20240718"
    fileList=loadDataFiles(folderName)

    ##------------------------- Ranking Table Creatation------------------------------------------##

    ranking, rankingComment = getRankingInfo()
    writeRankingSQL(folderName,fileList,ranking,rankingComment)

if __name__ == "__main__":
    main()





